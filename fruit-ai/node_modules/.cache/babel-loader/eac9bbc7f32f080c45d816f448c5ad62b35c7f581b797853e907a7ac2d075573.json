{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\appreciate wealth\\\\fruit-ai\\\\src\\\\Components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/App.css';\nimport FruitList from '../Components/FruitList';\nimport FruitDetail from '../Components/FruitDetail';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fruitsData = [{\n  id: 1,\n  name: 'Apple',\n  description: 'A sweet red fruit.',\n  image: 'apple.jpg'\n}, {\n  id: 2,\n  name: 'Banana',\n  description: 'A long yellow fruit.',\n  image: 'banana.jpg'\n}\n// Add more fruits here\n];\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [selectedFruit, setSelectedFruit] = useState(null);\n  const [file, setFile] = useState(null);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const url = URL.createObjectURL(file);\n      const fileMessage = {\n        type: 'file',\n        url,\n        name: file.name\n      };\n      setMessages([...messages, fileMessage]);\n      setFile(null); // Clear the file input\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === '' && !file) return;\n\n    // Add user message\n    const userMessage = {\n      text: input,\n      type: 'user'\n    };\n    setMessages([...messages, userMessage]);\n\n    // Process user input\n    const fruit = fruitsData.find(fruit => fruit.name.toLowerCase() === input.toLowerCase());\n    if (fruit) {\n      // Show fruit details if found\n      const botMessage = {\n        text: `Here are the details for ${fruit.name}: ${fruit.description}`,\n        type: 'bot'\n      };\n      setSelectedFruit(fruit);\n      setMessages([...messages, userMessage, botMessage]);\n    } else {\n      // Default response if fruit not found\n      const botMessage = {\n        text: \"Sorry, I don't know about that fruit. Try 'Apple' or 'Banana'.\",\n        type: 'bot'\n      };\n      setMessages([...messages, userMessage, botMessage]);\n    }\n    setInput('');\n    setFile(null); // Clear the file input\n  };\n  const handleBackToList = () => {\n    setSelectedFruit(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: selectedFruit ? /*#__PURE__*/_jsxDEV(FruitDetail, {\n        fruit: selectedFruit,\n        onBack: handleBackToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message chatbot-message-${message.type}`,\n          children: message.type === 'file' ? message.url.endsWith('.jpg') || message.url.endsWith('.png') ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.url,\n            alt: message.name,\n            style: {\n              maxWidth: '100%',\n              borderRadius: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n            controls: true,\n            src: message.url,\n            style: {\n              maxWidth: '100%',\n              borderRadius: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this) : message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        children: \"Add File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"FsRVgyTStPO7HEBctd65JJsvaUc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","FruitList","FruitDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","fruitsData","id","name","description","image","Chatbot","_s","messages","setMessages","input","setInput","selectedFruit","setSelectedFruit","file","setFile","handleInputChange","e","target","value","handleFileChange","files","url","URL","createObjectURL","fileMessage","type","handleSubmit","preventDefault","trim","userMessage","text","fruit","find","toLowerCase","botMessage","handleBackToList","className","children","onBack","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","endsWith","src","alt","style","maxWidth","borderRadius","controls","onSubmit","onChange","placeholder","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/appreciate wealth/fruit-ai/src/Components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/App.css';\r\nimport FruitList from '../Components/FruitList';\r\nimport FruitDetail from '../Components/FruitDetail';\r\n\r\nconst fruitsData = [\r\n  { id: 1, name: 'Apple', description: 'A sweet red fruit.', image: 'apple.jpg' },\r\n  { id: 2, name: 'Banana', description: 'A long yellow fruit.', image: 'banana.jpg' },\r\n  // Add more fruits here\r\n];\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [selectedFruit, setSelectedFruit] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const url = URL.createObjectURL(file);\r\n      const fileMessage = { type: 'file', url, name: file.name };\r\n      setMessages([...messages, fileMessage]);\r\n      setFile(null); // Clear the file input\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim() === '' && !file) return;\r\n\r\n    // Add user message\r\n    const userMessage = { text: input, type: 'user' };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    // Process user input\r\n    const fruit = fruitsData.find(fruit => fruit.name.toLowerCase() === input.toLowerCase());\r\n\r\n    if (fruit) {\r\n      // Show fruit details if found\r\n      const botMessage = { text: `Here are the details for ${fruit.name}: ${fruit.description}`, type: 'bot' };\r\n      setSelectedFruit(fruit);\r\n      setMessages([...messages, userMessage, botMessage]);\r\n    } else {\r\n      // Default response if fruit not found\r\n      const botMessage = { text: \"Sorry, I don't know about that fruit. Try 'Apple' or 'Banana'.\", type: 'bot' };\r\n      setMessages([...messages, userMessage, botMessage]);\r\n    }\r\n\r\n    setInput('');\r\n    setFile(null); // Clear the file input\r\n  };\r\n\r\n  const handleBackToList = () => {\r\n    setSelectedFruit(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chatbot-messages\">\r\n        {selectedFruit ? (\r\n          <FruitDetail fruit={selectedFruit} onBack={handleBackToList} />\r\n        ) : (\r\n          <>\r\n            {messages.map((message, index) => (\r\n              <div key={index} className={`chatbot-message chatbot-message-${message.type}`}>\r\n                {message.type === 'file' ? (\r\n                  message.url.endsWith('.jpg') || message.url.endsWith('.png') ? (\r\n                    <img src={message.url} alt={message.name} style={{ maxWidth: '100%', borderRadius: '8px' }} />\r\n                  ) : (\r\n                    <video controls src={message.url} style={{ maxWidth: '100%', borderRadius: '8px' }} />\r\n                  )\r\n                ) : (\r\n                  message.text\r\n                )}\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n      <form className=\"chatbot-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <label htmlFor=\"file-upload\">Add File</label>\r\n        <input\r\n          id=\"file-upload\"\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}