{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\appreciate wealth\\\\fruit-ai\\\\src\\\\Components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/App.css';\nimport FruitList from '../Components/FruitList';\nimport FruitDetail from '../Components/FruitDetail';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fruitsData = [{\n  id: 1,\n  name: 'Apple',\n  description: 'A sweet red fruit.',\n  image: 'apple.jpg'\n}, {\n  id: 2,\n  name: 'Banana',\n  description: 'A long yellow fruit.',\n  image: 'banana.jpg'\n}\n// Add more fruits here\n];\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [selectedFruit, setSelectedFruit] = useState(null);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === '') return;\n\n    // Add user message\n    const userMessage = {\n      text: input,\n      type: 'user'\n    };\n    setMessages([...messages, userMessage]);\n\n    // Process user input\n    const fruit = fruitsData.find(fruit => fruit.name.toLowerCase() === input.toLowerCase());\n    if (fruit) {\n      // Show fruit details if found\n      const botMessage = {\n        text: `Here are the details for ${fruit.name}: ${fruit.description}`,\n        type: 'bot'\n      };\n      setSelectedFruit(fruit);\n      setMessages([...messages, userMessage, botMessage]);\n    } else {\n      // Default response if fruit not found\n      const botMessage = {\n        text: \"Sorry, I don't know about that fruit. Try 'Apple' or 'Banana'.\",\n        type: 'bot'\n      };\n      setMessages([...messages, userMessage, botMessage]);\n    }\n    setInput('');\n  };\n  const handleBackToList = () => {\n    setSelectedFruit(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: selectedFruit ? /*#__PURE__*/_jsxDEV(FruitDetail, {\n        fruit: selectedFruit,\n        onBack: handleBackToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message chatbot-message-${message.type}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chatbot-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: handleInputChange,\n            placeholder: \"Type a fruit name...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"J0kiVI4tElla9DMLQu+MvZt2KN0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","FruitList","FruitDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","fruitsData","id","name","description","image","Chatbot","_s","messages","setMessages","input","setInput","selectedFruit","setSelectedFruit","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","userMessage","text","type","fruit","find","toLowerCase","botMessage","handleBackToList","className","children","onBack","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","onSubmit","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/appreciate wealth/fruit-ai/src/Components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/App.css';\r\nimport FruitList from '../Components/FruitList';\r\nimport FruitDetail from '../Components/FruitDetail';\r\n\r\nconst fruitsData = [\r\n  { id: 1, name: 'Apple', description: 'A sweet red fruit.', image: 'apple.jpg' },\r\n  { id: 2, name: 'Banana', description: 'A long yellow fruit.', image: 'banana.jpg' },\r\n  // Add more fruits here\r\n];\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [selectedFruit, setSelectedFruit] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim() === '') return;\r\n\r\n    // Add user message\r\n    const userMessage = { text: input, type: 'user' };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    // Process user input\r\n    const fruit = fruitsData.find(fruit => fruit.name.toLowerCase() === input.toLowerCase());\r\n\r\n    if (fruit) {\r\n      // Show fruit details if found\r\n      const botMessage = { text: `Here are the details for ${fruit.name}: ${fruit.description}`, type: 'bot' };\r\n      setSelectedFruit(fruit);\r\n      setMessages([...messages, userMessage, botMessage]);\r\n    } else {\r\n      // Default response if fruit not found\r\n      const botMessage = { text: \"Sorry, I don't know about that fruit. Try 'Apple' or 'Banana'.\", type: 'bot' };\r\n      setMessages([...messages, userMessage, botMessage]);\r\n    }\r\n\r\n    setInput('');\r\n  };\r\n\r\n  const handleBackToList = () => {\r\n    setSelectedFruit(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chatbot-messages\">\r\n        {selectedFruit ? (\r\n          <FruitDetail fruit={selectedFruit} onBack={handleBackToList} />\r\n        ) : (\r\n          <>\r\n            {messages.map((message, index) => (\r\n              <div key={index} className={`chatbot-message chatbot-message-${message.type}`}>\r\n                {message.text}\r\n              </div>\r\n            ))}\r\n            <form className=\"chatbot-form\" onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Type a fruit name...\"\r\n              />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}