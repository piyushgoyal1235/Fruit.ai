{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\appreciate wealth\\\\fruit-ai\\\\src\\\\Components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (input.trim() === '') return;\n    const newMessage = {\n      text: input,\n      type: 'user'\n    };\n    setMessages([...messages, newMessage]);\n    setInput('');\n\n    // Simulate a call to the backend\n    const response = await fetch('https://your-backend-url/api/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    const data = await response.json();\n    const botResponse = {\n      text: data.reply,\n      type: 'bot'\n    };\n    setMessages([...messages, newMessage, botResponse]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chatbot-message chatbot-message-${message.type}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","newMessage","text","type","response","fetch","method","headers","body","JSON","stringify","message","data","json","botResponse","reply","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/appreciate wealth/fruit-ai/src/Components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/App.css';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (input.trim() === '') return;\r\n\r\n    const newMessage = {\r\n      text: input,\r\n      type: 'user'\r\n    };\r\n    setMessages([...messages, newMessage]);\r\n    setInput('');\r\n\r\n    // Simulate a call to the backend\r\n    const response = await fetch('https://your-backend-url/api/chat', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ message: input })\r\n    });\r\n    const data = await response.json();\r\n\r\n    const botResponse = {\r\n      text: data.reply,\r\n      type: 'bot'\r\n    };\r\n    setMessages([...messages, newMessage, botResponse]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chatbot-message chatbot-message-${message.type}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form className=\"chatbot-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}